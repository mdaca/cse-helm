name: Update Helm Chart Release

on:
  push:
    branches: [ "main", "develop" ]
  workflow_dispatch:

jobs:
  update-helm-chart:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # fetch full history for tags

      - name: Configure Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Get latest Git tag version
        id: get_version
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "Current tag: $TAG"
          echo "CURRENT_VERSION=$TAG" >> $GITHUB_ENV

      - name: Determine version bump type
        id: determine_bump
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MESSAGE"
          BUMP_TYPE=$(echo "$COMMIT_MESSAGE" | grep -oP '\[(major|minor|patch)\]' | tr -d '[]')
          echo "BUMP_TYPE=${BUMP_TYPE:-none}" >> $GITHUB_ENV

      - name: Bump version and update Chart.yaml
        id: bump_version
        run: |
          cd chart/cse
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          if [[ "$BUMP_TYPE" != "none" ]]; then
            if [[ "$BUMP_TYPE" == "major" ]]; then
              MAJOR=$((MAJOR + 1)); MINOR=0; PATCH=0
            elif [[ "$BUMP_TYPE" == "minor" ]]; then
              MINOR=$((MINOR + 1)); PATCH=0
            elif [[ "$BUMP_TYPE" == "patch" ]]; then
              PATCH=$((PATCH + 1))
            fi
            NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
            sed -i "s/^version: .*/version: ${NEW_VERSION}/" Chart.yaml
            echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          else
            echo "No version bump; keeping current version $CURRENT_VERSION"
            echo "NEW_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          fi

      - name: Package Helm chart and update index.yaml
        run: |
          mkdir -p package
          cd chart
          helm package cse --destination ../package
          helm repo index ../package --url https://mdaca.github.io/cse-helm/package --merge ../package/index.yaml

      - name: Commit changes
        run: |
          git add chart/cse/Chart.yaml
          git add package/*
          git commit -m "Update Helm chart to version $NEW_VERSION" || echo "No changes to commit"
          git push origin HEAD

      - name: Create and push tag (if bumped)
        if: env.BUMP_TYPE != 'none'
        run: |
          git tag -a "$NEW_VERSION" -m "Release $NEW_VERSION"
          git push origin "$NEW_VERSION"
