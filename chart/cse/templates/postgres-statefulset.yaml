{{- if .Values.database.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cse.fullname" . }}-postgres
  labels:
    {{- include "cse.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "cse.fullname" . }}-postgres
  replicas: {{ .Values.database.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "cse.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgres
  template:
    metadata:
      labels:
        {{- include "cse.labels" . | nindent 8 }}
        app.kubernetes.io/component: postgres
        {{- with .Values.database.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.database.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cse.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.database.podSecurityContext | nindent 8 }}
      {{- if not .Values.database.persistence }}
      volumes:
        - name: data
          emptyDir: {}
      {{- end }}
      containers:
        - name: postgres
          image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}"
          imagePullPolicy: {{ .Values.database.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.database.port | default 5432 }}
              name: postgres
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: {{ .Values.database.name | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.database.user | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret | default (printf "%s-postgres" (include "cse.fullname" .)) }}
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          resources:
            {{- toYaml .Values.database.resources | nindent 12 }}
  {{- if .Values.database.persistence }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.database.storage | default "10Gi" }}
        {{- if .Values.database.storageClass }}
        storageClassName: {{ .Values.database.storageClass | quote }}
        {{- end }}
  {{- end }}
{{- end }}
