# Default values for this Helm chart.
# This values.yaml configures two major components: the 'cse' (Cloud Storage Explorer) application and an optional 'database' (PostgreSQL) backend.

cse:
  replicaCount: 1  # Number of replicas for the CSE deployment.

  image:
    repository: rstevens198238/cloud-storage-explorer  # Docker image repository for the CSE app.
    pullPolicy: IfNotPresent  # Image pull policy.
    tag: "latest"  # Tag of the Docker image to deploy.

  imagePullSecrets: []  # Add secrets if the Docker/Harbor/AWS ECR registry requires authentication.
  nameOverride: ""  # Optionally override the name of the chart.
  fullnameOverride: "cse"  # Override full name to be used for all resource names.

  env:
    - name: DB_USER
      value: postgres  # PostgreSQL username.
    - name: DB_PORT
      value: "5432"  # PostgreSQL port.
    - name: DB_PASSWORD
      valueFrom:    # Reference to secret key for DB password.
        secretKeyRef:
          name: cse-database-secret
          key: POSTGRES_PASSWORD
#    - name: DB_HOST
#      value: cse-postgres-cluster.cse-test.svc.cluster.local  # #Default is set to cse-postgres-cluster.cse-test.svc.cluster.local. Input your external postgrest database Host name
#    - name: DB_PORT
#      value: 5432 # Default port 5432
    - name: JAVA_OPTS
      value: "-Djboss.bind.address.management=0.0.0.0 -Xms1g -Xmx6g"  # JVM options for WildFly. Set for testing purposes and to test HPA. Add neccessary -djbo... as needed 
  auth:
    spnego: 
      enabled: false  # Enable/disable SPNEGO/Kerberos authentication. When false, configure below configs:
      config:
        applicationUsers: |  # User hash entries for basic auth.
          admin=b4e2efbdbb678152c8a7351b90627cf0
          ...
        applicationRoles: |  # Roles mapping for users.
           ...

  serviceAccount:
    create: true  # Create a new service account.
    automount: true  # Automatically mount service account tokens.
    annotations: {}
    name: ""

  podAnnotations: {}  # Optional custom annotations for CSE pods.
  podLabels: {}  # Optional additional labels.

  podSecurityContext:
    runAsUser: 1001  # Ensure non-root execution.
    runAsGroup: 1001
    fsGroup: 1001
    runAsNonRoot: true

  securityContext:
    allowPrivilegeEscalation: false  # Enforce container security best practices.
    capabilities:
      drop:
        - ALL
  readOnlyRootFilesystem: false  # Set to true if application can run with read-only. Wildfly works as WAR file explodes to tmp dir under $WILDFLY_HOME/standalone/data

  service:
    type: ClusterIP  # Service type to expose the app.
    port: 8080  # Port exposed by the application.

  ingress:
    enabled: false  # Enable ingress controller. Only needed if you plan to test using ingress
    manual:
      cert: |  # TLS certificate for manual ingress setup. Rpelace with you certificate.
        -----BEGIN CERTIFICATE-----
        ...
        -----END CERTIFICATE-----
      key: |  # TLS private key.
        -----BEGIN PRIVATE KEY-----
        ...
        -----END PRIVATE KEY-----
    className: "nginx"  # Ingress class name.
    annotations: {}
    hosts:
      - host: ddc-rm-steve  # Hostname for ingress.
        paths:
          - path: /storage-explorer
            pathType: ImplementationSpecific
    tls:
      - hosts:
          - ddc-rm-steve
        secretName: cse-ingress-secret  # Kubernetes secret name for TLS certs.

  autoscaling:
    enabled: false # Enabled if you plan to load test and/or use in production.
#    minReplicas: 1
#    maxReplicas: 3
#    targetCPUUtilizationPercentage: 80  # Target CPU utilization for HPA.
#    targetMemoryUtilizationPercentage: 80  # Target memory utilization.

  resources:
    requests:
      cpu: "512m"  # Minimum required CPU.
      memory: "3Gi"  # Minimum required memory.
    limits:
      cpu: "4"  # Maximum CPU allowed.
      memory: "6Gi"  # Maximum memory allowed.

  livenessProbe:
    httpGet:
      path: /health/live #Default managment helath check from wildfly. NOT RECCOMMENDED for production.
      port: 9990  # WildFly health check port. NOT RECCOMMENDED for production.

  readinessProbe:
    httpGet: 
      path: /health/live #Default managment helath check from wildfly. NOT RECCOMMENDED for production.
      port: 9990 # WildFly health check port. NOT RECCOMMENDED for production.

  volumeMounts:
    - name: standalone-xml
      mountPath: /opt/wildfly/standalone/configuration/standalone.xml
      subPath: standalone.xml
      readOnly: true

    - name: application-auth # Only used when SPENEGO is not enabled.
      mountPath: /opt/wildfly/standalone/configuration/application-users.properties
      subPath: application-users.properties
      readOnly: true
      spnegoOnly: true

    - name: application-auth # Only used when SPENEGO is not enabled.
      mountPath: /opt/wildfly/standalone/configuration/application-roles.properties
      subPath: application-roles.properties
      readOnly: true
      spnegoOnly: true

  volumes:
    - name: standalone-xml
      configMap:
        name: standalone-xml  # ConfigMap holding WildFly configuration file.
    - name: application-auth
      secret:
        secretName: cse-user-secret  # Secret for user/role files.
        items:
          - key: application-users.properties
            path: application-users.properties
          - key: application-roles.properties
            path: application-roles.properties

  nodeSelector: {}
  tolerations: []
  affinity: {}

database: 
  enabled: false  # Enable or disable deployment of a PostgreSQL DB. NOTE: Use this if you want to deploy a local database to kubernetes vice using a external one.
  replicaCount: 1  # Number of DB replicas.
  port: 5432

  image:
    repository: postgres
    tag: "14"
    pullPolicy: Always

  name: storexp  # Name of the DB.
  user: postgres  # DB username.
  password: dbpassword  # Fallback password if secret is not used.
  existingSecret: "cse-database-secret"  # External secret containing POSTGRES_PASSWORD.

  storage: 10Gi  # Size of PVC.
  storageClass: "dynamic-local-path"  # Storage class to use for PVC.

  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}

  volumeMounts: []  # Optional additional mounts for the DB.

  resources:
    requests:
      cpu: "250m"
      memory: "512Mi"
    limits:
      cpu: "1"
      memory: "1Gi"
