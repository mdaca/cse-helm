apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cse.fullname" . }}
  labels:
    {{- include "cse.labels" . | nindent 4 }}
spec:
  {{- if not .Values.cse.autoscaling.enabled }}
  replicas: {{ .Values.cse.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cse.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.cse.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cse.labels" . | nindent 8 }}
        {{- with .Values.cse.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.cse.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cse.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.cse.podSecurityContext | nindent 8 }}

      {{- /* Define spnegoEnabled and validMounts early for reuse */}}
      {{- $spnegoEnabled := false }}
      {{- if and (hasKey .Values "cse") (hasKey .Values.cse "auth") (hasKey .Values.cse.auth "spnego") }}
        {{- $spnegoEnabled = .Values.cse.auth.spnego.enabled }}
      {{- end }}
      {{- $spnegoDisabled := not $spnegoEnabled }}
      {{- $validMounts := list }}
      {{- range .Values.cse.volumeMounts }}
        {{- if or (not .spnegoOnly) (and .spnegoOnly $spnegoDisabled) }}
          {{- $validMounts = append $validMounts . }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.cse.securityContext | nindent 12 }}
          image: "{{ .Values.cse.image.repository }}:{{ .Values.cse.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.cse.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.cse.service.port }}
              protocol: TCP
          {{- with .Values.cse.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.cse.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          readinessProbe:
            {{- toYaml .Values.cse.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.cse.resources | nindent 12 }}

          volumeMounts:
            {{- range $validMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
              readOnly: {{ if hasKey . "readOnly" }}{{ .readOnly }}{{ else }}true{{ end }}
            {{- end }}

      volumes:
        {{- range $validMounts }}
        - name: {{ .name }}
          {{- if .secret }}
          secret:
            secretName: {{ .secret }}
          {{- else if .configMap }}
          configMap:
            name: {{ .configMap }}
          {{- else if .emptyDir }}
          emptyDir: {}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}

      {{- with .Values.cse.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.cse.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.cse.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}